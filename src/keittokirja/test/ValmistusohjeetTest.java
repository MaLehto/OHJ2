package keittokirja.test;
// Generated by ComTest BEGIN
import keittokirja.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.03.16 12:11:42 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class ValmistusohjeetTest {


  // Generated by ComTest BEGIN
  /** testIterator27 */
  @Test
  public void testIterator27() {    // Valmistusohjeet: 27
    Valmistusohjeet ohjeet = new Valmistusohjeet(); 
    Valmistusohje o1 = new Valmistusohje(); 
    Valmistusohje o2 = new Valmistusohje(); 
    Valmistusohje o3 = new Valmistusohje(); 
    o1.taytaTiedolla(2); 
    o2.taytaTiedolla(2); 
    o3.taytaTiedolla(1); 
    ohjeet.lisaa(o1); 
    ohjeet.lisaa(o2); 
    ohjeet.lisaa(o3); 
    Iterator<Valmistusohje> i = ohjeet.iterator(); 
    assertEquals("From: Valmistusohjeet line: 42", o1, i.next()); 
    assertEquals("From: Valmistusohjeet line: 43", o2, i.next()); 
    assertEquals("From: Valmistusohjeet line: 44", o3, i.next()); 
    try {
    assertEquals("From: Valmistusohjeet line: 45", o1, i.next()); 
    fail("Valmistusohjeet: 45 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
    int n = 0; 
    int vnrot[] = { 2, 2, 1} ; 
    for (Valmistusohje ohj : ohjeet) {
    assertEquals("From: Valmistusohjeet line: 51", vnrot[n], ohj.getTunnusNro()); 
    n++; 
    }
    assertEquals("From: Valmistusohjeet line: 55", 3, n); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaValmistusohjeet76 */
  @Test
  public void testAnnaValmistusohjeet76() {    // Valmistusohjeet: 76
    Valmistusohjeet ohjeet = new Valmistusohjeet(); 
    Valmistusohje o1 = new Valmistusohje(); 
    Valmistusohje o2 = new Valmistusohje(); 
    Valmistusohje o3 = new Valmistusohje(); 
    o1.taytaTiedolla(2); 
    o2.taytaTiedolla(2); 
    o3.taytaTiedolla(1); 
    ohjeet.lisaa(o1); 
    ohjeet.lisaa(o2); 
    ohjeet.lisaa(o3); 
    List<Valmistusohje> loytyneet; 
    loytyneet = ohjeet.annaValmistusohjeet(3); 
    assertEquals("From: Valmistusohjeet line: 91", 0, loytyneet.size()); 
    loytyneet = ohjeet.annaValmistusohjeet(2); 
    assertEquals("From: Valmistusohjeet line: 93", 2, loytyneet.size()); 
    assertEquals("From: Valmistusohjeet line: 94", true, loytyneet.get(0) == o1); 
    assertEquals("From: Valmistusohjeet line: 95", false, loytyneet.get(0) == o2); 
    loytyneet = ohjeet.annaValmistusohjeet(1); 
    assertEquals("From: Valmistusohjeet line: 97", 1, loytyneet.size()); 
    assertEquals("From: Valmistusohjeet line: 98", true, loytyneet.get(0) == o3); 
  } // Generated by ComTest END
}